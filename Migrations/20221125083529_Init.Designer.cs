// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate3.Data;

#nullable disable

namespace RealEstate3.Migrations
{
    [DbContext(typeof(REDbContext))]
    [Migration("20221125083529_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstate3.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("RealEstate3.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpperCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UpperCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nieruchomość"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dom",
                            UpperCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mieszkanie",
                            UpperCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pokój",
                            UpperCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bliźniak",
                            UpperCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Dom wolnostojący",
                            UpperCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kamienica",
                            UpperCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nowe budownictwo",
                            UpperCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Inne",
                            UpperCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jednoosobowy",
                            UpperCategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Ze współlokatorem",
                            UpperCategoryId = 4
                        });
                });

            modelBuilder.Entity("RealEstate3.Models.Estate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AvaiableFrom")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Balcony")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("Garden")
                        .HasColumnType("bit");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<double>("Rent")
                        .HasColumnType("float");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("CategoryId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Estates");
                });

            modelBuilder.Entity("RealEstate3.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthday")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("RealEstate3.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<string>("OriginalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureURL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EstateId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("RealEstate3.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("RealEstate3.Models.ReservationItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("EstateId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstateId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationItems");
                });

            modelBuilder.Entity("RealEstate3.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstateId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("RealEstate3.Models.Category", b =>
                {
                    b.HasOne("RealEstate3.Models.Category", "UpperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("UpperCategoryId");

                    b.Navigation("UpperCategory");
                });

            modelBuilder.Entity("RealEstate3.Models.Estate", b =>
                {
                    b.HasOne("RealEstate3.Models.Address", "Address")
                        .WithOne("Estate")
                        .HasForeignKey("RealEstate3.Models.Estate", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate3.Models.Category", "Category")
                        .WithMany("Estates")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstate3.Models.Owner", "Owner")
                        .WithMany("EstateList")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Category");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RealEstate3.Models.Picture", b =>
                {
                    b.HasOne("RealEstate3.Models.Estate", "Estate")
                        .WithMany("PicturesList")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");
                });

            modelBuilder.Entity("RealEstate3.Models.ReservationItem", b =>
                {
                    b.HasOne("RealEstate3.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId");

                    b.HasOne("RealEstate3.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId");

                    b.Navigation("Estate");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RealEstate3.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("RealEstate3.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");
                });

            modelBuilder.Entity("RealEstate3.Models.Address", b =>
                {
                    b.Navigation("Estate");
                });

            modelBuilder.Entity("RealEstate3.Models.Category", b =>
                {
                    b.Navigation("Estates");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("RealEstate3.Models.Estate", b =>
                {
                    b.Navigation("PicturesList");
                });

            modelBuilder.Entity("RealEstate3.Models.Owner", b =>
                {
                    b.Navigation("EstateList");
                });
#pragma warning restore 612, 618
        }
    }
}
